@model Doctor.ViewModel.DoctorView
<p style="margin-top:20px; margin-left:20px">
    <button class="btn btn-info" @*onclick="location.href='@Url.Action("New", "Doctor")'"*@ data-toggle="modal" data-target="#AddModal"><span class="fa fa-user-plus admin-action-icon"></span> Add Doctor</button>
</p>
<div class="container text-center">
    <h3 class="mt-xl-3">Doctors List</h3>
    <table class="table table-active">
        <tr>
            <th>Name</th>
            <th>Email</th>
            <th>Degree</th>
            <th>Action</th>
        </tr>
        @foreach (var dr in Model.Doctorses)
        {
            <tr>
                <td>@dr.DoctorName</td>
                <td>@dr.DoctorEmail</td>
                <td>@dr.DoctorDegree</td>
                <td>
                    @*<a onclick="GetData(@dr.Id)"><i class="fa fa-edit"></i></a>*@
                    <p class="btn btn-primary btn-sm admin-action-btn"><span class="fa fa-pencil-square-o admin-action-icon"></span>@Html.ActionLink(" Edit", "", new { id = dr.Id }, new { @class = "admin-action", onclick = "GetData(@dr.Id)"@*, data_toggle = "modal", data_target = "#EditModal"*@ })</p>
                    <p class="btn btn-danger btn-sm admin-action-btn"><span class="fa fa-trash admin-action-icon"></span>@Html.ActionLink(" Delete", "Delete", new { id = dr.Id }, new { @class = "admin-action", onclick = "return confirm('Are sure wants to delete?');" })</p>
                </td>
            </tr>
        }
    </table>
</div>
<div class="modal fade" id="AddModal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 id="ModalTitle">Add Doctor</h4>
                <a href="#" data-dismiss="modal" class="close">&times;</a>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm("New", "Doctor", FormMethod.Post, new { @encType = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.Doctors.DoctorName)

                        @Html.EditorFor(model => model.Doctors.DoctorName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter doctor name" } })
                        @Html.ValidationMessageFor(model => model.Doctors.DoctorName, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Doctors.DoctorImagePath)

                        @Html.TextBoxFor(model => model.Doctors.DoctorImagefile, new { Type = "file", @class = "form-control-file" })
                        @Html.ValidationMessageFor(model => model.Doctors.DoctorImagefile, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Doctors.DoctorBirthDate)

                        @Html.EditorFor(model => model.Doctors.DoctorBirthDate, "{0:d mm yyyy}", new { htmlAttributes = new { @class = "form-control", type = "Date" } })
                        @Html.ValidationMessageFor(model => model.Doctors.DoctorBirthDate, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Doctors.DoctorEmail)

                        @Html.EditorFor(model => model.Doctors.DoctorEmail, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter email" } })
                        @Html.ValidationMessageFor(model => model.Doctors.DoctorEmail, "", new { @class = "text-danger" })
                        @Html.ValidationMessage("EmailExist")
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Doctors.DoctorDegree)

                        @Html.TextAreaFor(model => model.Doctors.DoctorDegree, new { @class = "form-control", @placeholder = "Details of Degree, Institute and Other specification" })
                        @Html.ValidationMessageFor(model => model.Doctors.DoctorDegree, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Doctors.RegNo)

                        @Html.EditorFor(model => model.Doctors.RegNo, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter reg no" } })
                        @Html.ValidationMessageFor(model => model.Doctors.RegNo, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Doctors.DoctorDetails)

                        @Html.TextAreaFor(model => model.Doctors.DoctorDetails, new { @class = "form-control", @placeholder = "Details of Specialties, Experience and Expertise" })
                        @Html.ValidationMessageFor(model => model.Doctors.DoctorDetails, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Doctors.StartTime)

                        <div class="row">
                            <div class="col">
                                @Html.TextBoxFor(model => model.Doctors.StartTime, new { type = "time", @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Doctors.StartTime, "", new { @class = "text-danger" })
                            </div>
                            <div class="col">
                                @Html.TextBoxFor(model => model.Doctors.EndTime, new { type = "time", @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Doctors.EndTime, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Doctors.DepartmentId)<br />

                        @Html.DropDownListFor(model => model.Doctors.DepartmentId, new SelectList(Model.Departments, "Id", "deptName"), "Select Department", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Doctors.DepartmentId, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Doctors.DoctorPassword)

                        @Html.EditorFor(model => model.Doctors.DoctorPassword, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter 8 characters password" } })
                        @Html.ValidationMessageFor(model => model.Doctors.DoctorPassword, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Doctors.DoctorConfirmPassword)

                        @Html.EditorFor(model => model.Doctors.DoctorConfirmPassword, new { htmlAttributes = new { @class = "form-control", @placeholder = "Confirm password" } })
                        @Html.ValidationMessageFor(model => model.Doctors.DoctorConfirmPassword, "", new { @class = "text-danger" })
                    </div>

                    <button class="btn btn-outline-success" type="submit">Save</button>
                }
            </div>
            <div class="modal-footer">

            </div>
        </div>
    </div>
</div>

@*<div class="modal fade" id="EditModal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 id="ModalTitle">Update Info</h4>
                <a href="#" data-dismiss="modal" class="close">&times;</a>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm("Edit", "Doctor", FormMethod.Post, new { @encType = "multipart/form-data" }))
                {
                    @Html.HiddenFor(dr => dr.Doctors.Id, new { @id = "Did" })
                    <div class="form-group">
                        @Html.TextBoxFor(dr => dr.Doctors.DoctorName, new { @class = "form-control", @placeholder = "Enter Doctor Name" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(dr => dr.Doctors.DoctorImagePath)
                        <input type="file" class="form-control-file" id="DoctorImagePath" name="DoctorImagefile" value="@Model.Doctors.DoctorImagePath">
                        @Html.ValidationMessageFor(dr => dr.Doctors.DoctorImagefile, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        <input class="form-control" data-val="true" data-val-date="The field Date Of Birth must be a date." id="BirthDate" name="DoctorBirthDate" placeholder="Date of Birth" type="Date" value="@Model.Doctors.DoctorBirthDate">
                    </div>
                    <div class="form-group">
                        @Html.TextBoxFor(dr => dr.Doctors.DoctorEmail, new { @class = "form-control", @placeholder = "Enter Email" })
                    </div>
                    <div class="form-group">
                        @Html.TextBoxFor(dr => dr.Doctors.DoctorDegree, new { @class = "form-control", @placeholder = "Enter Degree" })
                    </div>
                    <div class="form-group">
                        @Html.TextBoxFor(dr => dr.Doctors.RegNo, new { @class = "form-control", @placeholder = "Enter Reg No" })
                    </div>
                    <div class="form-group">
                        @Html.TextBoxFor(dr => dr.Doctors.DoctorDetails, new { @class = "form-control", @placeholder = "Enter Details" })
                    </div>
                    <button class="btn btn-outline-success" type="submit">Update</button>
                }
            </div>
            <div class="modal-footer">

            </div>
        </div>
    </div>
</div>*@

<script>
    $(function () {
        $('#example1').DataTable();
    })
    function GetData(id) {
        $.ajax({
            url: "/Doctor/Edit/" + id,
            typr: "GET",
            contentType: "application/json;charset=UTF-8",
            dataType: "json",
            success: function (response) {
                alert(response.Id);
                $('#Did').val(response.Id);
                $('#DoctorName').val(response.DoctorName);
                $('#DoctorImagePath').val(response.DoctorImagePath);
                $('#BirthDate').val(response.DoctorBirthDate);
                $('#DoctorEmail').val(response.DoctorEmail);
                $('#DoctorDegree').val(response.DoctorDegree);
                $('#RegNo').val(response.RegNo);
                $('#DoctorDetails').val(response.DoctorDetails);
                $('#EditModal').modal('show');
            },
            error: function (response) {
                alert(response.responseText);
            }
        });
        return false;
    }
</script>
